# find_library(skia_DEB NAMES skia PATHS "/home/ysl/Code/skia/out/Static")

set(SKIA_EXTERNAL_PROJECT_DIR "/home/ysl/Code/skia/")
set(SKIA_LIB_DIR "/home/ysl/Code/skia/out/Linux/Shared/DebugEGL")
set(SKIA_INCLUDE_DIRS "${SKIA_EXTERNAL_PROJECT_DIR}" "${SKIA_EXTERNAL_PROJECT_DIR}/include/")
set(SKIA_LIBS)

set(SKIA_LIB_NAMES
skia
dng_sdk
pathkit
piex
skcms
skottie
skparagraph
skresources
# sksg
skshaper
sktext
skunicode
sksg
svg
wuffs
png
webp
jpeg
compression_utils_portable
icu
icu_bidi
)


set(
SKIA_COMPILE_DEFS
SKSL_ENABLE_TRACING
SK_ENABLE_SPIRV_VALIDATION
SK_R32_SHIFT=16
SK_ENABLE_SKSL
SK_ENABLE_SKSL_IN_RASTER_PIPELINE
SK_ENABLE_PRECOMPILE
SK_GANESH
SK_USE_PERFETTO
SK_GAMMA_APPLY_TO_A8
SK_ALLOW_STATIC_GLOBAL_INITIALIZERS=1
GR_TEST_UTILS=1
SK_TYPEFACE_FACTORY_FREETYPE
SK_GL
SK_ENABLE_DUMP_GPU
SK_SUPPORT_PDF
SK_CODEC_DECODES_JPEG
SK_CODEC_DECODES_JPEG_GAINMAPS
SK_XML
SK_ENABLE_ANDROID_UTILS
SK_HAS_HEIF_LIBRARY
SK_CODEC_DECODES_PNG
SK_CODEC_DECODES_RAW
SK_CODEC_DECODES_WEBP
SK_HAS_WUFFS_LIBRARY)

foreach(LIB_NAME ${SKIA_LIB_NAMES})
find_library(FOUND_LIB_${LIB_NAME} NAMES ${LIB_NAME} PATHS ${SKIA_LIB_DIR})
if(FOUND_LIB_${LIB_NAME})
message(STATUS "find skia library: ${FOUND_LIB_${LIB_NAME}} in ${SKIA_LIB_DIR}")
add_library(skia::${LIB_NAME} STATIC IMPORTED)
set_target_properties(skia::${LIB_NAME} PROPERTIES
  IMPORTED_LOCATION "${FOUND_LIB_${LIB_NAME}}"
  IMPORTED_LOCATION_DEBUG "${FOUND_LIB_${LIB_NAME}}"
  IMPORTED_CONFIGURATIONS "RELEASE;DEBUG")
target_compile_definitions(skia::${LIB_NAME} INTERFACE ${SKIA_COMPILE_DEFS})
target_include_directories(skia::${LIB_NAME} INTERFACE ${SKIA_INCLUDE_DIRS})
list(APPEND SKIA_LIBS skia::${LIB_NAME})
else()
message(STATUS "${LIB_NAME} not found in " ${SKIA_LIB_DIR})
endif()
endforeach(LIB_NAME)
